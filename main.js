(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>r});var i=t(537),a=t.n(i),o=t(645),d=t.n(o)()(a());d.push([e.id,"* { \n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody\n{\n    min-height: 100vh;\n    background-color:#65ccb8 ;\n    overflow: hidden;\n}\n\n#content\n{\n    min-height: 100%;\n}\n\n.navBar , .navBarMenu\n{\n    display:flex;\n    justify-content: space-evenly;\n    color: #182628;\n    font-weight: bold;\n    padding-top: 10px;\n}\n\n.container\n{\n    display: flex;\n    flex-direction: column;\n    min-height: 100%;\n}\n\n.topText\n{\n    margin-top: 200px;\n    text-align: center;\n    font-weight: bold;\n    font-size: xx-large;\n}\n\n.bottomText\n{\n    font-size: large;\n    text-align: center;\n    margin-top: 15px;\n}\n\n.middleText\n{\n    max-width: 1000px;\n    padding: 15px;\n    margin-left: 300px;\n    color: #f2f2f2;\n}\n\n.footerText\n{\n    text-align: center;\n    font-weight: bold;\n    color: #182628;   \n    position: fixed;\n    bottom: 0;\n    margin-left: 750px;\n    padding-bottom: 5px;\n}\n\n.container1{\n    display: flex;\n    flex-direction: column;\n}\n\n.textOffer\n{\n    font-size: x-large;\n    font-weight: bold;\n    margin-top: 3%;\n    padding: 2%;\n}\n\n.menuItemsOne\n{\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    justify-items: center;\n}\n\n\n.img1, .img2, .img3\n{\n    width:50%;\n    height:auto;\n}\n\n\n.itemOne, .itemTwo, .itemThree\n{\n    display: flex;\n    flex-direction: column;\n\n}\n\n.actualMenu\n{\n    display: flex;    \n    margin-left: 50%;\n    flex-direction: column;\n    padding: 10px;\n    row-gap: 20px;\n}\n\n.subTitle\n{\n    font-weight: 600;\n}\n\n.menuTitle\n{\n    font-size: x-large;\n    font-weight: bold;\n}\n\n.item\n{\n    margin-left: 10px;\n}\n\n#home\n{\n    cursor: pointer;\n}\n\n#menu\n{\n    cursor: pointer;\n}\n\n#aboutUs\n{\n    cursor: pointer;\n}\n\n.aboutUsText\n{\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    margin-top: 30px;\n    column-gap: 20px;\n}\n\n.textLeft\n{\n    text-align: center;\n}\n\n#img4\n{\n    border-radius: 20%;\n    margin-left: 10%;\n}\n\n.headingAboutUs\n{\n    font-weight: bold;\n    font-size: larger;\n    margin-top: 50px;\n    margin-left: 30px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;;IAEI,iBAAiB;IACjB,yBAAyB;IACzB,gBAAgB;AACpB;;AAEA;;IAEI,gBAAgB;AACpB;;AAEA;;IAEI,YAAY;IACZ,6BAA6B;IAC7B,cAAc;IACd,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;;IAEI,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;;IAEI,gBAAgB;IAChB,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;;IAEI,iBAAiB;IACjB,aAAa;IACb,kBAAkB;IAClB,cAAc;AAClB;;AAEA;;IAEI,kBAAkB;IAClB,iBAAiB;IACjB,cAAc;IACd,eAAe;IACf,SAAS;IACT,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;;IAEI,kBAAkB;IAClB,iBAAiB;IACjB,cAAc;IACd,WAAW;AACf;;AAEA;;IAEI,aAAa;IACb,kCAAkC;IAClC,qBAAqB;AACzB;;;AAGA;;IAEI,SAAS;IACT,WAAW;AACf;;;AAGA;;IAEI,aAAa;IACb,sBAAsB;;AAE1B;;AAEA;;IAEI,aAAa;IACb,gBAAgB;IAChB,sBAAsB;IACtB,aAAa;IACb,aAAa;AACjB;;AAEA;;IAEI,gBAAgB;AACpB;;AAEA;;IAEI,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;;IAEI,iBAAiB;AACrB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;;IAEI,aAAa;IACb,8BAA8B;IAC9B,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;;IAEI,kBAAkB;AACtB;;AAEA;;IAEI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;;IAEI,iBAAiB;IACjB,iBAAiB;IACjB,gBAAgB;IAChB,iBAAiB;AACrB",sourcesContent:["* { \n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody\n{\n    min-height: 100vh;\n    background-color:#65ccb8 ;\n    overflow: hidden;\n}\n\n#content\n{\n    min-height: 100%;\n}\n\n.navBar , .navBarMenu\n{\n    display:flex;\n    justify-content: space-evenly;\n    color: #182628;\n    font-weight: bold;\n    padding-top: 10px;\n}\n\n.container\n{\n    display: flex;\n    flex-direction: column;\n    min-height: 100%;\n}\n\n.topText\n{\n    margin-top: 200px;\n    text-align: center;\n    font-weight: bold;\n    font-size: xx-large;\n}\n\n.bottomText\n{\n    font-size: large;\n    text-align: center;\n    margin-top: 15px;\n}\n\n.middleText\n{\n    max-width: 1000px;\n    padding: 15px;\n    margin-left: 300px;\n    color: #f2f2f2;\n}\n\n.footerText\n{\n    text-align: center;\n    font-weight: bold;\n    color: #182628;   \n    position: fixed;\n    bottom: 0;\n    margin-left: 750px;\n    padding-bottom: 5px;\n}\n\n.container1{\n    display: flex;\n    flex-direction: column;\n}\n\n.textOffer\n{\n    font-size: x-large;\n    font-weight: bold;\n    margin-top: 3%;\n    padding: 2%;\n}\n\n.menuItemsOne\n{\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    justify-items: center;\n}\n\n\n.img1, .img2, .img3\n{\n    width:50%;\n    height:auto;\n}\n\n\n.itemOne, .itemTwo, .itemThree\n{\n    display: flex;\n    flex-direction: column;\n\n}\n\n.actualMenu\n{\n    display: flex;    \n    margin-left: 50%;\n    flex-direction: column;\n    padding: 10px;\n    row-gap: 20px;\n}\n\n.subTitle\n{\n    font-weight: 600;\n}\n\n.menuTitle\n{\n    font-size: x-large;\n    font-weight: bold;\n}\n\n.item\n{\n    margin-left: 10px;\n}\n\n#home\n{\n    cursor: pointer;\n}\n\n#menu\n{\n    cursor: pointer;\n}\n\n#aboutUs\n{\n    cursor: pointer;\n}\n\n.aboutUsText\n{\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    margin-top: 30px;\n    column-gap: 20px;\n}\n\n.textLeft\n{\n    text-align: center;\n}\n\n#img4\n{\n    border-radius: 20%;\n    margin-left: 10%;\n}\n\n.headingAboutUs\n{\n    font-weight: bold;\n    font-size: larger;\n    margin-top: 50px;\n    margin-left: 30px;\n}"],sourceRoot:""}]);const r=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",i=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),i&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),i&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,i,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(i)for(var r=0;r<this.length;r++){var s=this[r][0];null!=s&&(d[s]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);i&&d[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(a," */"),d=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(d).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,i=0;i<n.length;i++)if(n[i].identifier===e){t=i;break}return t}function i(e,i){for(var o={},d=[],r=0;r<e.length;r++){var s=e[r],c=i.base?s[0]+i.base:s[0],l=o[c]||0,A="".concat(c," ").concat(l);o[c]=l+1;var p=t(A),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var u=a(m,i);i.byIndex=r,n.splice(r,0,{identifier:A,updater:u,references:1})}d.push(A)}return d}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=i(e=e||[],a=a||{});return function(e){e=e||[];for(var d=0;d<o.length;d++){var r=t(o[d]);n[r].references--}for(var s=i(e,a),c=0;c<o.length;c++){var l=t(o[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=s}}},569:e=>{var n={};e.exports=function(e,t){var i=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,a&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(i,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(i){var a=n[i];if(void 0!==a)return a.exports;var o=n[i]={id:i,exports:{}};return e[i](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var i=n.getElementsByTagName("script");i.length&&(e=i[i.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{const e=document.createElement("div"),n=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div"),o=document.createElement("div"),d=()=>{e.setAttribute("id","content"),document.body.appendChild(e),e.appendChild(n),n.classList.add("container")},r=t.p+"3f08297f6afa9f934bfe.jpg",s=t.p+"b430fa22bf32b14de673.jpg",c=t.p+"318416731604b049bbb4.jpg",l=new Image;l.src=r;const A=new Image;A.src=s;const p=new Image;p.src=c;const m=document.createElement("div"),u=document.createElement("div"),f=document.createElement("div"),g=document.createElement("div"),C=document.createElement("div"),h=document.createElement("div"),B=t.p+"55b15a723edc04e00caa.jpeg",v=new Image;v.src=B;const x=document.createElement("div"),b=document.createElement("div"),E=document.createElement("div"),I=document.createElement("div");I.setAttribute("id","content");const y=()=>{x.setAttribute("id","container3"),document.body.appendChild(I),I.appendChild(x)};var L=t(379),w=t.n(L),T=t(795),k=t.n(T),j=t(569),M=t.n(j),U=t(565),S=t.n(U),O=t(216),z=t.n(O),H=t(589),P=t.n(H),N=t(426),q={};function R(){e.remove(),n.remove(),u.remove()}function Z(){m.remove()}function F(){I.remove()}function W(){d()}function D(){m.setAttribute("id","content"),document.body.appendChild(m),m.appendChild(u),document.body.appendChild(m),m.appendChild(u),u.classList.add("container1")}q.styleTagTransform=P(),q.setAttributes=S(),q.insert=M().bind(null,"head"),q.domAPI=k(),q.insertStyleElement=z(),w()(N.Z,q),N.Z&&N.Z.locals&&N.Z.locals,d(),(()=>{const e=document.createElement("div");n.appendChild(e),e.classList.add("navBar"),a.setAttribute("id","home"),i.setAttribute("id","menu"),o.setAttribute("id","aboutUs"),a.textContent="Home",i.textContent="Menu",o.textContent=" About Us ",e.appendChild(a),e.appendChild(i),e.appendChild(o)})(),(()=>{const e=document.createElement("div");e.classList.add("middleText");const t=document.createElement("div"),i=document.createElement("div");t.classList.add("topText"),i.classList.add("bottomText"),t.textContent="welcome to a totally real hotel",i.textContent="ah yes we serve a lot of food here, totally real food. Would you like to have some of this non-fake food? Head over to our menu tab to see what you can order.(still dont understand webpack :/ )",e.appendChild(t),e.appendChild(i),n.appendChild(e)})(),(()=>{const e=document.createElement("div"),t=document.createElement("div");e.classList.add("footer"),t.classList.add("footerText"),t.textContent="Made by Hoslok-1",n.appendChild(e),e.appendChild(t)})(),(()=>{const e=document.createElement("div");u.appendChild(e),e.classList.add("navBar"),f.setAttribute("id","home"),C.setAttribute("id","menu"),g.setAttribute("id","aboutUs"),f.textContent="Home",C.textContent="Menu",g.textContent=" About Us ",e.appendChild(f),e.appendChild(C),e.appendChild(g)})(),(()=>{const e=document.createElement("div");u.appendChild(e),e.classList.add("textOffer"),e.textContent="Today's Featured items:",u.appendChild(h),h.classList.add("menuItems");const n=document.createElement("div");n.classList.add("menuItemsOne"),h.appendChild(n);const t=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div");n.appendChild(t),n.appendChild(i),n.appendChild(a),t.textContent="item 1",i.textContent="item 2",a.textContent="item 3",t.classList.add("itemOne"),i.classList.add("itemTwo"),a.classList.add("itemThree"),t.appendChild(l),l.classList.add("img1"),i.appendChild(A),A.classList.add("img2"),a.appendChild(p),p.classList.add("img3")})(),(()=>{const e=document.createElement("div");e.classList.add("actualMenu"),u.appendChild(e);const n=document.createElement("div");e.appendChild(n),n.textContent="Menu",n.classList.add("menuTitle");const t=document.createElement("div"),i=document.createElement("div"),a=document.createElement("div");e.appendChild(t),e.appendChild(i),e.appendChild(a),t.classList.add("menuPartOne"),i.classList.add("menuPartTwo"),a.classList.add("menuPartThree");const o=document.createElement("div");t.appendChild(o),o.classList.add("subTitle"),o.textContent="Starters";const d=document.createElement("div");i.appendChild(d),d.classList.add("subTitle"),d.textContent="Main Course";const r=document.createElement("div");a.appendChild(r),r.classList.add("subTitle"),r.textContent="Desserts";const s=document.createElement("div"),c=document.createElement("div"),l=document.createElement("div");s.classList.add("item"),c.classList.add("item"),l.classList.add("item"),t.appendChild(s),t.appendChild(c),t.appendChild(l),s.textContent="1.Lorem ipsum",c.textContent="2.dolor sit amet",l.textContent="3.consectetur adipiscing elit";const A=document.createElement("div"),p=document.createElement("div"),m=document.createElement("div");A.classList.add("item"),p.classList.add("item"),m.classList.add("item"),i.appendChild(A),i.appendChild(p),i.appendChild(m),A.textContent="1.Lorem ipsum",p.textContent="2.dolor sit amet",m.textContent="3.consectetur adipiscing elit";const f=document.createElement("div"),g=document.createElement("div"),C=document.createElement("div");f.classList.add("item"),g.classList.add("item"),C.classList.add("item"),a.appendChild(f),a.appendChild(g),a.appendChild(C),f.textContent="1.Lorem ipsum",g.textContent="2.dolor sit amet",C.textContent="3.consectetur adipiscing elit"})(),(()=>{const e=document.createElement("div"),n=document.createElement("div");e.classList.add("footer"),n.classList.add("footerText"),n.textContent="Made by Hoslok-1",u.appendChild(e),e.appendChild(n)})(),(()=>{const e=document.createElement("div"),n=document.createElement("div");x.appendChild(e),e.classList.add("navBar"),b.setAttribute("id","home"),E.setAttribute("id","menu"),n.setAttribute("id","aboutUs"),b.textContent="Home",E.textContent="Menu",n.textContent=" About Us ",e.appendChild(b),e.appendChild(E),e.appendChild(n)})(),(()=>{const e=document.createElement("div");e.textContent="About our owner",x.appendChild(e),e.classList.add("headingAboutUs")})(),(()=>{const e=document.createElement("div");x.appendChild(e),e.classList.add("aboutUsText");const n=document.createElement("div");e.appendChild(n),n.classList.add("textLeft"),n.textContent="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse eu semper lacus, ut laoreet orci. In tristique magna eget condimentum auctor. Suspendisse dictum sem mauris, ac blandit sem malesuada nec. Fusce ac finibus velit, eget bibendum eros. Nulla facilisi. Mauris fringilla, eros at ullamcorper aliquam, risus lacus interdum sapien, eget faucibus mauris magna non nulla. Duis eu tincidunt sem. Aliquam vulputate metus leo, sed porta magna maximus eget. Phasellus vehicula, felis nec vestibulum ultricies, ante metus porta sapien, vel pretium diam erat non dolor. Donec ut diam hendrerit, eleifend tellus nec, ornare libero. Nullam neque libero, venenatis vel ultricies nec. ",e.appendChild(v),v.setAttribute("id","img4")})(),(()=>{const e=document.createElement("div"),n=document.createElement("div");e.classList.add("footer"),n.classList.add("footerText"),n.textContent="Made by Hoslok-1",x.appendChild(e),e.appendChild(n)})(),b.addEventListener("click",(()=>{F(),W()})),f.addEventListener("click",(()=>{Z(),W()})),E.addEventListener("click",(()=>{F(),D()})),i.addEventListener("click",(()=>{R(),D()})),o.addEventListener("click",(()=>{R(),y()})),g.addEventListener("click",(()=>{Z(),y()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,